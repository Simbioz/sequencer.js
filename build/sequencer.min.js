var Handle=function(e){var n=this,t=[];"undefined"!=typeof e&&t.push(e),this.isReleased=!1,this.addOnReleaseHandler=function(e){t.push(e)},this.release=function(){n.isReleased=!0,t.forEach(function(e){e()})}},Sequencer=function(){function e(){i||(i=!0,t())}function n(){return 0!=o.length?!1:(i=!1,!0)}function t(){if(!n()){var e=new Handle(t),i=o.shift();i.perform(e)}}var i=!1,o=[];this.push=function(n){o.push(n),e()}},DoTask=function(e){this.perform=function(n){e(),n.release()}};Sequencer.prototype["do"]=function(e){return this.push(new DoTask(e)),this};var DoWaitTask=function(e){this.perform=function(n){setTimeout(n.release,e)}};Sequencer.prototype.doWait=function(e){return this.push(new DoWaitTask(e)),this};var DoWaitForHandleTask=function(e){this.perform=function(n){return e.isReleased?void n.release():void e.addOnReleaseHandler(n.release)}};Sequencer.prototype.doWaitForHandle=function(e){return this.push(new DoWaitForHandleTask(e)),this};var DoWithHandleTask=function(e){this.perform=function(n){e(n)}};Sequencer.prototype.doWithHandle=function(e){return this.push(new DoWithHandleTask(e)),this};